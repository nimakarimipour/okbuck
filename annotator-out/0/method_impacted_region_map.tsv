REGION_CLASS	REGION_MEMBER	USED_MEMBER	USED_CLASS	SOURCE_TYPE
com.uber.okbuck.template.core.Rule	DEFAULT_VISIBILITY	of(E)	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.template.core.Rule	visibility	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.template.core.Rule	deps	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.template.core.Rule	labels	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.template.core.Rule	extraBuckOpts	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.template.core.Rule	valid(java.util.Map)	isEmpty()	java.util.Map	SOURCE
com.uber.okbuck.template.core.Rule	valid(java.util.Collection)	isEmpty()	java.util.Collection	SOURCE
com.uber.okbuck.template.core.Rule	valid(java.lang.String)	isEmpty()	java.lang.String	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.OutputStream)	render(com.fizzed.rocker.RockerOutputFactory)	com.fizzed.rocker.runtime.DefaultRockerModel	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.OutputStream)	create(com.fizzed.rocker.ContentType,java.lang.String)	com.fizzed.rocker.RockerOutputFactory	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.OutputStream)	OutputStreamOutput(com.fizzed.rocker.ContentType,java.io.OutputStream,java.lang.String)	com.fizzed.rocker.runtime.OutputStreamOutput	SOURCE
com.uber.okbuck.template.core.Rule	render(java.nio.file.Path)	render(java.io.File)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.template.core.Rule	render(java.nio.file.Path)	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.File)	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.File)	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.File)	render(java.io.OutputStream)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.File)	FileOutputStream(java.io.File)	java.io.FileOutputStream	SOURCE
com.uber.okbuck.template.core.Rule	render(java.io.File)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.template.core.Rule	sorted(java.util.Collection)	Builder(java.util.Comparator)	com.google.common.collect.ImmutableSortedSet$Builder	SOURCE
com.uber.okbuck.template.core.Rule	sorted(java.util.Collection)	compare(T,T)	java.util.Comparator	SOURCE
com.uber.okbuck.template.core.Rule	sorted(java.util.Collection)	compareTo(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.template.core.Rule	sorted(java.util.Collection)	add(E)	com.google.common.collect.ImmutableSortedSet$Builder	SOURCE
com.uber.okbuck.template.core.Rule	sorted(java.util.Collection)	toString()	java.lang.Object	SOURCE
com.uber.okbuck.template.core.Rule	sorted(java.util.Collection)	build()	com.google.common.collect.ImmutableSortedSet$Builder	SOURCE
com.uber.okbuck.template.core.RuleTemplate	RuleTemplate(com.fizzed.rocker.RockerModel)	DefaultRockerTemplate(com.fizzed.rocker.RockerModel)	com.fizzed.rocker.runtime.DefaultRockerTemplate	SOURCE
com.uber.okbuck.template.core.RuleTemplate	RuleTemplate(com.fizzed.rocker.RockerModel)	IllegalArgumentException(java.lang.String)	java.lang.IllegalArgumentException	SOURCE
com.uber.okbuck.template.core.RuleTemplate	RuleTemplate(com.fizzed.rocker.RockerModel)	getName()	java.lang.Class	SOURCE
com.uber.okbuck.template.core.RuleTemplate	__associate(com.fizzed.rocker.RockerTemplate)	__associate(com.fizzed.rocker.RockerTemplate)	com.fizzed.rocker.runtime.DefaultRockerTemplate	SOURCE
com.uber.okbuck.template.core.RuleTemplate	__associate(com.fizzed.rocker.RockerTemplate)	IllegalArgumentException(java.lang.String)	java.lang.IllegalArgumentException	SOURCE
com.uber.okbuck.template.core.RuleTemplate	__associate(com.fizzed.rocker.RockerTemplate)	getCanonicalName()	java.lang.Class	SOURCE
com.uber.okbuck.extension.TransformExtension	transforms	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	annotationProcessors	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	linearAllocHardLimit	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	primaryDexPatterns	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	exopackage	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	appLibDependencies	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	proguardMappingFile	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	lintExclude	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	testExclude	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	extraBuckOpts	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.OkBuckExtension	extraDefs	HashSet()	java.util.HashSet	SOURCE
com.uber.okbuck.extension.OkBuckExtension	excludeResources	HashSet()	java.util.HashSet	SOURCE
com.uber.okbuck.extension.OkBuckExtension	extraDepCaches	HashSet()	java.util.HashSet	SOURCE
com.uber.okbuck.extension.OkBuckExtension	wrapperExtension	WrapperExtension()	com.uber.okbuck.extension.WrapperExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	scalaExtension	ScalaExtension()	com.uber.okbuck.extension.ScalaExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	intellijExtension	IntellijExtension()	com.uber.okbuck.extension.IntellijExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	experimentalExtension	ExperimentalExtension()	com.uber.okbuck.extension.ExperimentalExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	testExtension	TestExtension()	com.uber.okbuck.extension.TestExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	transformExtension	TransformExtension()	com.uber.okbuck.extension.TransformExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	externalDependenciesExtension	ExternalDependenciesExtension()	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	OkBuckExtension(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.extension.OkBuckExtension	OkBuckExtension(org.gradle.api.Project)	getSubprojects()	org.gradle.api.Project	SOURCE
com.uber.okbuck.extension.OkBuckExtension	OkBuckExtension(org.gradle.api.Project)	KotlinExtension(org.gradle.api.Project)	com.uber.okbuck.extension.KotlinExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	OkBuckExtension(org.gradle.api.Project)	LintExtension(org.gradle.api.Project)	com.uber.okbuck.extension.LintExtension	SOURCE
com.uber.okbuck.extension.OkBuckExtension	wrapper(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	kotlin(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	scala(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	intellij(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	experimental(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	test(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	lint(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	transform(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.OkBuckExtension	externalDependencies(org.gradle.api.Action)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.extension.WrapperExtension	watch	newHashSet(E[])	com.google.common.collect.Sets	SOURCE
com.uber.okbuck.extension.WrapperExtension	sourceRoots	newHashSet(E[])	com.google.common.collect.Sets	SOURCE
com.uber.okbuck.extension.WrapperExtension	ignoredDirs	newHashSet(E[])	com.google.common.collect.Sets	SOURCE
com.uber.okbuck.extension.KotlinExtension	KotlinExtension(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.extension.KotlinExtension	KotlinExtension(org.gradle.api.Project)	getDefaultKotlinVersion(org.gradle.api.Project)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.extension.LintExtension	LintExtension(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.extension.LintExtension	LintExtension(org.gradle.api.Project)	getDefaultLintVersion(org.gradle.api.Project)	com.uber.okbuck.core.manager.LintManager	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	allowSpecificVersions	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	allowAllVersions	ArrayList()	java.util.ArrayList	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	entrySet()	java.util.Map	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	toMap(java.util.function.Function,java.util.function.Function)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	fromMavenCoords(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	getKey()	java.util.Map$Entry	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowedVersionsMap()	getValue()	java.util.Map$Entry	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowAllVersionsSet()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowAllVersionsSet()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowAllVersionsSet()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowAllVersionsSet()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowAllVersionsSet()	fromMavenCoords(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	getAllowAllVersionsSet()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isVersioned(com.uber.okbuck.core.dependency.VersionlessDependency)	contains(java.lang.Object)	java.util.Set	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isVersioned(com.uber.okbuck.core.dependency.VersionlessDependency)	getAllowAllVersionsSet()	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isVersioned(com.uber.okbuck.core.dependency.VersionlessDependency)	containsKey(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isVersioned(com.uber.okbuck.core.dependency.VersionlessDependency)	getAllowedVersionsMap()	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	contains(java.lang.Object)	java.util.Set	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	getAllowAllVersionsSet()	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	getAllowedVersionsMap()	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	contains(java.lang.Object)	java.util.List	SOURCE
com.uber.okbuck.extension.ExternalDependenciesExtension	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	getVersion()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	builder()	Builder()	com.uber.okbuck.core.dependency.$AutoValue_VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	mavenCoords()	group()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	mavenCoords()	name()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	mavenCoords()	orElse(T)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	mavenCoords()	map(java.util.function.Function)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	mavenCoords()	classifier()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	mavenCoords()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	splitToList(java.lang.CharSequence)	com.google.common.base.Splitter	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	on(java.lang.String)	com.google.common.base.Splitter	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	size()	java.util.List	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	build()	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	setName(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	setGroup(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	builder()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	get(int)	java.util.List	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	get(int)	java.util.List	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	build()	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	setClassifier(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	setName(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	setGroup(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	builder()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	get(int)	java.util.List	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	get(int)	java.util.List	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	get(int)	java.util.List	SOURCE
com.uber.okbuck.core.dependency.VersionlessDependency	fromMavenCoords(java.lang.String)	RuntimeException(java.lang.String)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	equals(java.lang.Object)	getClass()	java.lang.Object	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	equals(java.lang.Object)	getClass()	java.lang.Object	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	equals(java.lang.Object)	equals(java.lang.Object,java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	hashCode()	hashCode()	java.lang.Object	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	toString()	toString()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getGroup()	group()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getGroup()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getName()	name()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getName()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getVersionless()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getVersion()	version()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealDependencyFile()	realDependencyFile()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getPackaging()	packaging()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getMavenCoords()	getMavenCoords()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getBasePath()	basePath()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getCacheName()	cacheName()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getLintCacheName()	getCacheName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getDependencyFileName()	getCacheName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getDependencyFileName()	getPackaging()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getDependencyFilePath()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getDependencyFilePath()	getBasePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getDependencyFilePath()	getCacheName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileName()	getSourceFileNameFrom(java.lang.String)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileName()	getDependencyFileName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFilePath()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFilePath()	getBasePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFilePath()	getSourceFileName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getLintFileName()	replaceFirst(java.lang.String,java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getLintFileName()	getDependencyFileName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getLintFilePath()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getLintFilePath()	basePath()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getLintFilePath()	getLintCacheName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealSourceFilePath(org.gradle.api.Project)	computeSourceFile(org.gradle.api.Project)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealLintFilePath()	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealLintFilePath()	getPackaging()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealLintFilePath()	getContentPath(java.nio.file.Path,java.lang.String)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealLintFilePath()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getRealLintFilePath()	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	isWhiteListed(java.io.File)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	contains(java.lang.Object)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	of(E,E)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getPackaging()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getSourceFileNameFrom(java.lang.String)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getName()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	exists(java.nio.file.Path,java.nio.file.LinkOption[])	java.nio.file.Files	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	isLocal()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getSingleZipFilePath(org.gradle.api.Project,java.io.File,java.lang.String)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	computeSourceFile(org.gradle.api.Project)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileNameFrom(java.lang.String)	contains(java.lang.Object)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileNameFrom(java.lang.String)	of(E,E)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileNameFrom(java.lang.String)	getPackaging()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileNameFrom(java.lang.String)	replaceFirst(java.lang.String,java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	getSourceFileNameFrom(java.lang.String)	RuntimeException(java.lang.String)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	isNullOrEmpty(java.lang.String)	com.google.common.base.Strings	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	build()	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setClassifier(java.util.Optional)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setName(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setGroup(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	builder()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	ofNullable(T)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	emptyToNull(java.lang.String)	com.google.common.base.Strings	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	build()	com.uber.okbuck.core.dependency.BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setRealDependencyFile(java.io.File)	com.uber.okbuck.core.dependency.BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setIsVersioned(boolean)	com.uber.okbuck.core.dependency.BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setIsLocal(boolean)	com.uber.okbuck.core.dependency.BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setVersion(java.lang.String)	com.uber.okbuck.core.dependency.BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	setVersionless(com.uber.okbuck.core.dependency.VersionlessDependency)	com.uber.okbuck.core.dependency.BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	builder()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	isVersioned(com.uber.okbuck.core.dependency.VersionlessDependency)	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	from(java.lang.String,java.lang.String,java.lang.String,java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	getModuleClassifier(java.lang.String,java.lang.String)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	from(java.lang.String,java.lang.String,java.lang.String,java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	getName()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	from(java.lang.String,java.lang.String,java.lang.String,java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	fromLocal(java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	ExternalDependency(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	fromLocal(java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	getBaseName(java.lang.String)	org.apache.commons.io.FilenameUtils	SOURCE
com.uber.okbuck.core.dependency.ExternalDependency	fromLocal(java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	getName()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	builder()	Builder()	com.uber.okbuck.core.dependency.$AutoValue_BaseExternalDependency$Builder	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	toString()	getMavenCoords()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	toString()	toString()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	toString()	realDependencyFile()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	group()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	name()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	packaging()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	version()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	orElse(T)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	map(java.util.function.Function)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	classifier()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	getMavenCoords()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	packaging()	getExtension(java.lang.String)	org.apache.commons.io.FilenameUtils	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	packaging()	getName()	java.io.File	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	packaging()	realDependencyFile()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	StringBuilder(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	name()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	isVersioned()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	version()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	orElse(T)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	map(java.util.function.Function)	java.util.Optional	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	classifier()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	cacheName()	toString()	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	basePath()	get(java.lang.String,java.lang.String[])	java.nio.file.Paths	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	basePath()	replace(char,char)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	basePath()	group()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.dependency.BaseExternalDependency	basePath()	versionless()	com.uber.okbuck.core.dependency.BaseExternalDependency	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	scopes	ConcurrentHashMap()	java.util.concurrent.ConcurrentHashMap	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	create(java.lang.String,java.lang.Class,java.lang.Object[])	org.gradle.api.plugins.ExtensionContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getExtensions()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	afterEvaluate(org.gradle.api.Action)	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	create(java.lang.String)	org.gradle.api.tasks.TaskContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTasks()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	setGroup(java.lang.String)	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	setDescription(java.lang.String)	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	TargetCache()	com.uber.okbuck.core.model.base.TargetCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	AnnotationProcessorCache(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	DependencyManager(org.gradle.api.Project,java.lang.String,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getExternalDependenciesExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	LintManager(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.manager.LintManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	KotlinManager(org.gradle.api.Project)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	ScalaManager(org.gradle.api.Project)	com.uber.okbuck.core.manager.ScalaManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	GroovyManager(org.gradle.api.Project)	com.uber.okbuck.core.manager.GroovyManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	RobolectricManager(org.gradle.api.Project)	com.uber.okbuck.core.manager.RobolectricManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	TransformManager(org.gradle.api.Project)	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	BuckManager(org.gradle.api.Project)	com.uber.okbuck.core.manager.BuckManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getKotlinExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getScalaExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	create(java.lang.String,java.lang.Class,java.lang.Object[])	org.gradle.api.tasks.TaskContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTasks()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	dependsOn(java.lang.Object[])	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	doLast(org.gradle.api.Action)	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeProcessors()	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.LintManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.ScalaManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalDependencies()	com.uber.okbuck.core.manager.GroovyManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.RobolectricManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	finalizeDependencies()	com.uber.okbuck.core.manager.BuckManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getWrapperExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	create(java.lang.String,java.lang.Class,java.lang.Object[])	org.gradle.api.tasks.TaskContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTasks()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	toMap(java.util.function.Function,java.util.function.Function)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	identity()	java.util.function.Function	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	doFirst(org.gradle.api.Action)	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getProperty(java.lang.String,java.lang.String)	java.lang.System	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	IllegalArgumentException(java.lang.String)	java.lang.IllegalArgumentException	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	doLast(org.gradle.api.Action)	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	deleteQuietly(java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	toPath()	java.io.File	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getProjectDir()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTargets(org.gradle.api.Project)	com.uber.okbuck.core.model.base.TargetCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getLintExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getLintExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	fetchLintDeps(java.lang.String)	com.uber.okbuck.core.manager.LintManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getLintExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getExperimentalExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	fetchTransformDeps()	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	copyDeps()	com.uber.okbuck.core.util.D8Util	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTestExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	download()	com.uber.okbuck.core.manager.RobolectricManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	forEach(java.util.function.BiConsumer)	java.util.Map	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	accept(T,U)	java.util.function.BiConsumer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	build(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	setupBuckBinary()	com.uber.okbuck.core.manager.BuckManager	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	create(java.lang.String,java.lang.Class,java.lang.Object[])	org.gradle.api.tasks.TaskContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTasks()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	dependsOn(java.lang.Object[])	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	forEach(java.util.function.Consumer)	java.util.stream.Stream	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	exists()	java.io.File	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getBuildFile()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	getTasks()	org.gradle.api.Project	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	doLast(org.gradle.api.Action)	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	generate(org.gradle.api.Project)	com.uber.okbuck.generator.BuckFileGenerator	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	dependsOn(java.lang.Object[])	org.gradle.api.Task	SOURCE
com.uber.okbuck.OkBuckGradlePlugin	apply(org.gradle.api.Project)	dependsOn(java.lang.Object[])	org.gradle.api.Task	SOURCE
com.uber.okbuck.core.task.OkBuckTask	OkBuckTask(com.uber.okbuck.extension.OkBuckExtension,com.uber.okbuck.extension.KotlinExtension,com.uber.okbuck.extension.ScalaExtension)	DefaultTask()	org.gradle.api.DefaultTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	OkBuckTask(com.uber.okbuck.extension.OkBuckExtension,com.uber.okbuck.extension.KotlinExtension,com.uber.okbuck.extension.ScalaExtension)	upToDateWhen(org.gradle.api.specs.Spec)	org.gradle.api.tasks.TaskOutputs	SOURCE
com.uber.okbuck.core.task.OkBuckTask	OkBuckTask(com.uber.okbuck.extension.OkBuckExtension,com.uber.okbuck.extension.KotlinExtension,com.uber.okbuck.extension.ScalaExtension)	getOutputs()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	OkBuckTask(com.uber.okbuck.extension.OkBuckExtension,com.uber.okbuck.extension.KotlinExtension,com.uber.okbuck.extension.ScalaExtension)	satisfyNone()	org.gradle.api.specs.Specs	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	anyMatch(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getType(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	setupGroovyHome()	com.uber.okbuck.core.manager.GroovyManager	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getGroovyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	anyMatch(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getType(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	setupScalaHome(java.lang.String)	com.uber.okbuck.core.manager.ScalaManager	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getScalaManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	setupKotlinHome(java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getKotlinManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuck()	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.uber.okbuck.core.task.OkBuckTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuckDefs()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuckDefs()	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	dotBuckConfig()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.task.OkBuckTask	dotBuckConfig()	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuckBuckConfig()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.task.OkBuckTask	okbuckBuckConfig()	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	createNewFile()	java.io.File	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	dotBuckConfig()	com.uber.okbuck.core.task.OkBuckTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	render(java.io.File)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	classpathMacro(java.lang.String)	com.uber.okbuck.template.config.BuckDefs	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	resourceExcludes(java.util.Collection)	com.uber.okbuck.template.config.BuckDefs	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	BuckDefs()	com.uber.okbuck.template.config.BuckDefs	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	okbuckDefs()	com.uber.okbuck.core.task.OkBuckTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	getRelativePath(java.io.File,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	getRootDir()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	add(E)	java.util.Set	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	render(java.io.File)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set)	com.uber.okbuck.generator.OkbuckBuckConfigGenerator	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	getProguardJarPath(org.gradle.api.Project)	com.uber.okbuck.core.util.ProguardUtil	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	getProject()	org.gradle.api.internal.AbstractTask	SOURCE
com.uber.okbuck.core.task.OkBuckTask	generate(com.uber.okbuck.extension.OkBuckExtension,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	okbuckBuckConfig()	com.uber.okbuck.core.task.OkBuckTask	SOURCE
com.uber.okbuck.core.model.base.Scope	targetDeps	HashSet()	java.util.HashSet	SOURCE
com.uber.okbuck.core.model.base.Scope	external	HashSet()	java.util.HashSet	SOURCE
com.uber.okbuck.core.model.base.Scope	PROJECT_FILTER	isSatisfiedBy(T)	org.gradle.api.specs.Spec	SOURCE
com.uber.okbuck.core.model.base.Scope	EXTERNAL_DEP_FILTER	isSatisfiedBy(T)	org.gradle.api.specs.Spec	SOURCE
com.uber.okbuck.core.model.base.Scope	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map,com.uber.okbuck.core.dependency.DependencyCache)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.model.base.Scope	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map,com.uber.okbuck.core.dependency.DependencyCache)	available(org.gradle.api.Project,java.util.Collection)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map,com.uber.okbuck.core.dependency.DependencyCache)	available(org.gradle.api.Project,java.util.Collection)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map,com.uber.okbuck.core.dependency.DependencyCache)	extractConfiguration(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.model.base.Scope	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map)	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map,com.uber.okbuck.core.dependency.DependencyCache)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.model.base.Scope	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map)	getDependencyCache(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	get(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalDeps()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	get(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	getPackaging()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalJarDeps()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	get(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	getPackaging()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getExternalAarDeps()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	isNullOrEmpty(java.lang.String)	com.google.common.base.Strings	SOURCE
com.uber.okbuck.core.model.base.Scope	getPackagedLintJars()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getAllDependencies()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	build()	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	setName(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	setGroup(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	builder()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getName()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	concat(java.util.stream.Stream[])	com.google.common.collect.Streams	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	contains(java.lang.Object)	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	build()	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	setName(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	setGroup(java.lang.String)	com.uber.okbuck.core.dependency.VersionlessDependency$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	builder()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getGroup()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getProject()	com.uber.okbuck.core.model.base.Target	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getName()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getProject()	com.uber.okbuck.core.model.base.Target	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	contains(java.lang.Object)	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getOkbuck()	com.uber.okbuck.core.model.base.Target	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	getProp(java.util.Map,T)	com.uber.okbuck.core.model.base.Target	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	of()	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	isNotEmpty(java.lang.CharSequence)	org.apache.commons.lang3.StringUtils	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessors()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	hasAutoValueExtensions()	anyMatch(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	hasAutoValueExtensions()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	hasAutoValueExtensions()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	hasAutoValueExtensions()	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	checkNotNull(T)	com.google.common.base.Preconditions	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getAllDependencies()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	sorted()	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getVersion()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	length()	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getVersion()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getName()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getName()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getVersion()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	length()	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	joining(java.lang.CharSequence)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	size()	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	findAny()	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getName()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getName()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	getVersion()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	checkArgument(boolean,java.lang.Object)	com.google.common.base.Preconditions	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	isPresent()	java.util.Optional	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	md5Hex(java.lang.String)	org.apache.commons.codec.digest.DigestUtils	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getAnnotationProcessorsUID()	get()	java.util.Optional	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	getArtifacts()	org.gradle.api.artifacts.ArtifactCollection	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	getArtifacts()	org.gradle.api.artifacts.ArtifactView	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	artifactView(org.gradle.api.Action)	org.gradle.api.artifacts.ResolvableDependencies	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	getIncoming()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	attributes(org.gradle.api.Action)	org.gradle.api.attributes.HasConfigurableAttributes	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	attribute(org.gradle.api.attributes.Attribute,T)	org.gradle.api.attributes.AttributeContainer	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	of(java.lang.String,java.lang.Class)	org.gradle.api.attributes.Attribute	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	componentFilter(org.gradle.api.specs.Spec)	org.gradle.api.artifacts.ArtifactView$ViewConfiguration	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	builder()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	forEach(java.util.function.Consumer)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	addAll(java.lang.Iterable)	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	getArtifacts(org.gradle.api.artifacts.Configuration,java.lang.String,org.gradle.api.specs.Spec)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	getName()	java.io.File	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.model.base.Scope	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	build()	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	HashSet()	java.util.HashSet	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	of(E)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	isConsumable(java.io.File)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getComponentIdentifier()	org.gradle.api.artifacts.component.ComponentArtifactIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getId()	org.gradle.api.artifacts.result.ArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getAttribute(org.gradle.api.attributes.Attribute)	org.gradle.api.attributes.AttributeContainer	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getAttributes()	org.gradle.api.artifacts.result.ResolvedVariantResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getVariant()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getName()	org.gradle.api.Named	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	add(E)	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getTargetForVariant(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	project(java.lang.String)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getProjectPath()	org.gradle.api.artifacts.component.ProjectComponentIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getArtifacts(org.gradle.api.artifacts.Configuration,org.gradle.api.specs.Spec,com.google.common.collect.ImmutableList)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	of(E,E)	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	isConsumable(java.io.File)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getComponentIdentifier()	org.gradle.api.artifacts.component.ComponentArtifactIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getId()	org.gradle.api.artifacts.result.ArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	add(E)	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	length()	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getVersion()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	from(java.lang.String,java.lang.String,java.lang.String,java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getGroup()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getModule()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getVersion()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getExternalDependenciesExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	add(E)	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getAbsolutePath()	java.io.File	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getProjectDir()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getAbsolutePath()	java.io.File	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	directoryContains(java.lang.String,java.lang.String)	org.apache.commons.io.FilenameUtils	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	isWhiteListed(java.io.File)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	IllegalStateException(java.lang.String)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getProjectDir()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	add(E)	java.util.Set	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	fromLocal(java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getExternalDependenciesExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getIntellijExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	extractConfiguration(org.gradle.api.artifacts.Configuration)	downloadSources(org.gradle.api.Project,java.util.Set)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	getClass()	java.lang.Object	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	getClass()	java.lang.Object	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	equals(java.lang.Object,java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	equals(java.lang.Object,java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	equals(java.lang.Object,java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	equals(java.lang.Object,java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.model.base.Scope	equals(java.lang.Object)	equals(java.lang.Object,java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.model.base.Scope	hashCode()	hash(java.lang.Object[])	java.util.Objects	SOURCE
com.uber.okbuck.core.model.base.Scope	builder(org.gradle.api.Project)	Builder(org.gradle.api.Project)	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder$COMPILER	JAVA	COMPILER()	com.uber.okbuck.core.model.base.Scope$Builder$COMPILER	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder$COMPILER	KOTLIN	COMPILER()	com.uber.okbuck.core.model.base.Scope$Builder$COMPILER	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder$COMPILER	SCALA	COMPILER()	com.uber.okbuck.core.model.base.Scope$Builder$COMPILER	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	javaResourceDirs	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	sourceDirs	of()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	compilerOptions	LinkedHashMap()	java.util.LinkedHashMap	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	Builder(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	Builder(org.gradle.api.Project)	getDependencyCache(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	configuration(java.lang.String)	useful(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	compilerOptions(com.uber.okbuck.core.model.base.Scope.Builder.COMPILER,java.util.List)	computeIfAbsent(K,java.util.function.Function)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	compilerOptions(com.uber.okbuck.core.model.base.Scope.Builder.COMPILER,java.util.List)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	compilerOptions(com.uber.okbuck.core.model.base.Scope.Builder.COMPILER,java.util.List)	ArrayList()	java.util.ArrayList	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	compilerOptions(com.uber.okbuck.core.model.base.Scope.Builder.COMPILER,java.util.List)	addAll(java.util.Collection)	java.util.List	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	useful(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	getName()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	computeIfAbsent(K,java.util.function.Function)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	computeIfAbsent(K,java.util.function.Function)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	getScopes(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	ConcurrentHashMap()	java.util.concurrent.ConcurrentHashMap	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.model.base.Scope$Builder	build()	Scope(org.gradle.api.Project,org.gradle.api.artifacts.Configuration,java.util.Set,java.util.Set,java.util.Map,com.uber.okbuck.core.dependency.DependencyCache)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	LOG	getLogger(java.lang.Class)	org.slf4j.LoggerFactory	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	forcedDeps	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	getIntellijExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	getExternal()	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	build()	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	configuration(java.lang.String)	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	builder(org.gradle.api.Project)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	get(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager,java.lang.String)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	info(java.lang.String,java.lang.Object)	org.slf4j.Logger	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	getOrDefault(java.lang.Object,V)	java.util.Map	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	info(java.lang.String,java.lang.Object)	org.slf4j.Logger	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	addDependency(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	info(java.lang.String,java.lang.Object)	org.slf4j.Logger	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	getRealSourceFilePath(org.gradle.api.Project)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	get(com.uber.okbuck.core.dependency.ExternalDependency)	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	toString()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	resolve(java.nio.file.Path)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	get(java.lang.String,java.lang.String[])	java.nio.file.Paths	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	getCacheDirName()	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	getDependencyFilePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	getOrDefault(java.lang.Object,V)	java.util.Map	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	getCacheName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	getJarFileContent(java.io.File,java.lang.String)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	copyOf(E[])	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	split(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getAnnotationProcessors(com.uber.okbuck.core.dependency.ExternalDependency)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	getOrDefault(java.lang.Object,V)	java.util.Map	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	getJarFileContent(java.io.File,java.lang.String)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	isEmpty()	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	hasAutoValueExtensions(com.uber.okbuck.core.dependency.ExternalDependency)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	JarFile(java.io.File)	java.util.jar.JarFile	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	getEntry(java.lang.String)	java.util.jar.JarFile	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	stream(T[])	java.util.Arrays	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	split(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	trim()	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	toString(java.io.InputStream,java.lang.String)	org.apache.commons.io.IOUtils	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	getInputStream(java.util.zip.ZipEntry)	java.util.jar.JarFile	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	startsWith(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	isEmpty()	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	trim()	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	toList()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getJarFileContent(java.io.File,java.lang.String)	join(java.lang.CharSequence,java.lang.Iterable)	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	getOrDefault(java.lang.Object,V)	java.util.Map	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	getRealLintFilePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	toString()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	resolve(java.nio.file.Path)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	get(java.lang.String,java.lang.String[])	java.nio.file.Paths	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	getCacheDirName()	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	getLintJar(com.uber.okbuck.core.dependency.ExternalDependency)	getLintFilePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(org.gradle.api.artifacts.Configuration)	build(java.util.Set)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(org.gradle.api.artifacts.Configuration)	singleton(T)	java.util.Collections	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getExternalDependenciesExtension()	com.uber.okbuck.extension.OkBuckExtension	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getArtifacts()	org.gradle.api.artifacts.ArtifactCollection	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getArtifacts()	org.gradle.api.artifacts.ResolvableDependencies	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getIncoming()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getComponentIdentifier()	org.gradle.api.artifacts.component.ComponentArtifactIdentifier	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getId()	org.gradle.api.artifacts.result.ArtifactResult	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	isConsumable(java.io.File)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	length()	java.lang.String	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getVersion()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	from(java.lang.String,java.lang.String,java.lang.String,java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getGroup()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getModule()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getVersion()	org.gradle.api.artifacts.component.ModuleComponentIdentifier	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	fromLocal(java.io.File,com.uber.okbuck.extension.ExternalDependenciesExtension)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getFile()	org.gradle.api.artifacts.result.ResolvedArtifactResult	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	get(com.uber.okbuck.core.dependency.ExternalDependency,boolean)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	nonNull(java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	artifactResolveException(java.lang.Exception)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	getPath(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	build(java.util.Set)	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.dependency.DependencyCache	artifactResolveException(java.lang.Exception)	IllegalStateException(java.lang.String,java.lang.Throwable)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.model.base.TargetCache	store	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.model.base.TargetCache	artifactNameToTarget	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getType(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getApplicationVariants()	com.android.build.gradle.AppExtension	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getByType(java.lang.Class)	org.gradle.api.plugins.ExtensionContainer	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getExtensions()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getName()	com.android.build.gradle.api.BaseVariant	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	AndroidAppTarget(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.model.android.AndroidAppTarget	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getName()	com.android.build.gradle.api.BaseVariant	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getLibraryVariants()	com.android.build.gradle.LibraryExtension	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getByType(java.lang.Class)	org.gradle.api.plugins.ExtensionContainer	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getExtensions()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	AndroidLibTarget(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.model.android.AndroidLibTarget	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getName()	com.android.build.gradle.api.BaseVariant	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getName()	com.android.build.gradle.api.BaseVariant	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	getName()	com.android.build.gradle.api.BaseVariant	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	singletonMap(K,V)	java.util.Collections	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	JvmTarget(org.gradle.api.Project,java.lang.String,java.lang.String,java.lang.String)	com.uber.okbuck.core.model.jvm.JvmTarget	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	singletonMap(K,V)	java.util.Collections	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	JvmTarget(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.model.jvm.JvmTarget	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	emptyMap()	java.util.Collections	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargets(org.gradle.api.Project)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	getType(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	IllegalStateException(java.lang.String)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	getDisplayName()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	next()	java.util.Iterator	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	iterator()	java.util.Collection	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	values()	java.util.Map	SOURCE
com.uber.okbuck.core.model.base.TargetCache	getTargetForVariant(org.gradle.api.Project,java.lang.String)	getTargets(org.gradle.api.Project)	com.uber.okbuck.core.model.base.TargetCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	dependencyToScopeMap	ConcurrentHashMap()	java.util.concurrent.ConcurrentHashMap	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	AnnotationProcessorCache(org.gradle.api.Project,java.lang.String)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,java.lang.String)	getConfiguration(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,java.lang.String)	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,java.lang.String)	of()	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	builder()	com.google.common.collect.ImmutableList	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	builder()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	getAllDependencies()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	keySet()	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	anyMatch(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	getGroup()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	startsWith(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	getName()	org.gradle.api.artifacts.Dependency	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	hasAutoValueExtensions()	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	addAll(java.lang.Iterable)	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	add(E)	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	build()	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	size()	java.util.Set	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	addAll(java.lang.Iterable)	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	values()	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getAnnotationProcessorScopes(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	build()	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,java.lang.String)	getConfiguration(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,java.lang.String)	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	com.uber.okbuck.core.annotation.AnnotationProcessorCache	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	getAllDependencies()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	anyMatch(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	values()	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	isEmpty()	java.util.Set	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	hasEmptyAnnotationProcessors(org.gradle.api.Project,org.gradle.api.artifacts.Configuration)	getAnnotationProcessors()	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	finalizeProcessors()	compose(java.util.Collection)	com.uber.okbuck.composer.java.JavaAnnotationProcessorRuleComposer	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	finalizeProcessors()	values()	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	finalizeProcessors()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	finalizeProcessors()	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	finalizeProcessors()	writeToBuckFile(java.util.List,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	Builder()	com.google.common.collect.ImmutableMap$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	toArray(T[])	java.util.Set	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	detachedConfiguration(org.gradle.api.artifacts.Dependency[])	org.gradle.api.artifacts.ConfigurationContainer	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	build()	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	configuration(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	builder(org.gradle.api.Project)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	copyOf(java.util.Collection)	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	computeIfAbsent(K,java.util.function.Function)	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	put(K,V)	com.google.common.collect.ImmutableMap$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	of(E)	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	computeIfAbsent(K,java.util.function.Function)	java.util.Map	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	put(K,V)	com.google.common.collect.ImmutableMap$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	createProcessorScopes(org.gradle.api.Project,java.util.Set,boolean)	build()	com.google.common.collect.ImmutableMap$Builder	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getConfiguration(org.gradle.api.Project,java.lang.String)	useful(org.gradle.api.Project,java.lang.String)	com.uber.okbuck.core.dependency.DependencyUtils	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getConfiguration(org.gradle.api.Project,java.lang.String)	IllegalStateException(java.lang.String)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getConfiguration(org.gradle.api.Project,java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.annotation.AnnotationProcessorCache	getConfiguration(org.gradle.api.Project,java.lang.String)	getDisplayName()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.DependencyManager	LOG	getLogger(java.lang.Class)	org.slf4j.LoggerFactory	SOURCE
com.uber.okbuck.core.manager.DependencyManager	DependencyManager(org.gradle.api.Project,java.lang.String,com.uber.okbuck.extension.ExternalDependenciesExtension)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.DependencyManager	dependencyMap	synchronizedSetMultimap(com.google.common.collect.SetMultimap)	com.google.common.collect.Multimaps	SOURCE
com.uber.okbuck.core.manager.DependencyManager	dependencyMap	build()	com.google.common.collect.MultimapBuilder$SetMultimapBuilder	SOURCE
com.uber.okbuck.core.manager.DependencyManager	dependencyMap	hashSetValues()	com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys	SOURCE
com.uber.okbuck.core.manager.DependencyManager	dependencyMap	hashKeys()	com.google.common.collect.MultimapBuilder	SOURCE
com.uber.okbuck.core.manager.DependencyManager	addDependency(com.uber.okbuck.core.dependency.ExternalDependency)	put(K,V)	com.google.common.collect.Multimap	SOURCE
com.uber.okbuck.core.manager.DependencyManager	addDependency(com.uber.okbuck.core.dependency.ExternalDependency)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	getCacheDir()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.DependencyManager	getCacheDir()	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.DependencyManager	finalizeDependencies()	validateDependencies()	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.manager.DependencyManager	finalizeDependencies()	processDependencies()	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	withKeyValueSeparator(java.lang.String)	com.google.common.base.Joiner	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	on(java.lang.String)	com.google.common.base.Joiner	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	entrySet()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	asMap()	com.google.common.collect.SetMultimap	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	size()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getValue()	java.util.Map$Entry	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getValue()	java.util.Map$Entry	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	isAllowed(com.uber.okbuck.core.dependency.ExternalDependency)	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	groupingBy(java.util.function.Function,java.util.stream.Collector)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	mavenCoords()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	mapping(java.util.function.Function,java.util.stream.Collector)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getVersion()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	size()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	RuntimeException(java.lang.String)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	join(java.util.Map)	com.google.common.base.Joiner$MapJoiner	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	entrySet()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	asMap()	com.google.common.collect.SetMultimap	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	size()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getValue()	java.util.Map$Entry	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getValue()	java.util.Map$Entry	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	isVersioned(com.uber.okbuck.core.dependency.VersionlessDependency)	com.uber.okbuck.extension.ExternalDependenciesExtension	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	groupingBy(java.util.function.Function,java.util.stream.Collector)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	mavenCoords()	com.uber.okbuck.core.dependency.VersionlessDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	mapping(java.util.function.Function,java.util.stream.Collector)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getVersion()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	toSet()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	size()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	RuntimeException(java.lang.String)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	join(java.util.Map)	com.google.common.base.Joiner$MapJoiner	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	values()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	asMap()	com.google.common.collect.SetMultimap	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getVersion()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	endsWith(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	endsWith(java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getCacheName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	joining(java.lang.CharSequence)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	isEmpty()	java.lang.String	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	IllegalStateException(java.lang.String)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.manager.DependencyManager	validateDependencies()	warn(java.lang.String)	org.slf4j.Logger	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	getCacheDir()	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	exists()	java.io.File	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	deleteDirectory(java.io.File)	org.apache.commons.io.FileUtils	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	RuntimeException(java.lang.String)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	IllegalStateException(java.lang.String)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	values()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	asMap()	com.google.common.collect.SetMultimap	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	groupingBy(java.util.function.Function)	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	resolve(java.nio.file.Path)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	getBasePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	forEach(java.util.function.BiConsumer)	java.util.Map	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	accept(T,U)	java.util.function.BiConsumer	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.manager.DependencyManager	processDependencies()	composeBuckFile(java.nio.file.Path,java.util.Collection)	com.uber.okbuck.core.manager.DependencyManager	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	build()	com.google.common.collect.MultimapBuilder$SetMultimapBuilder	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	hashSetValues()	com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	hashKeys()	com.google.common.collect.MultimapBuilder	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	put(K,V)	com.google.common.collect.Multimap	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getVersionless()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	symlink(java.nio.file.Path,java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getDependencyFileName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getRealDependencyFile()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getRealSourceFilePath(org.gradle.api.Project)	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	symlink(java.nio.file.Path,java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getSourceFileName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getRealLintFilePath()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	getLintFileName()	com.uber.okbuck.core.dependency.ExternalDependency	SOURCE
com.uber.okbuck.core.manager.DependencyManager	copyOrCreateSymlinks(java.nio.file.Path,java.util.Collection)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.DependencyManager	composeBuckFile(java.nio.file.Path,java.util.Collection)	compose(java.util.Collection)	com.uber.okbuck.composer.java.PrebuiltRuleComposer	SOURCE
com.uber.okbuck.core.manager.DependencyManager	composeBuckFile(java.nio.file.Path,java.util.Collection)	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	composeBuckFile(java.nio.file.Path,java.util.Collection)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.DependencyManager	composeBuckFile(java.nio.file.Path,java.util.Collection)	writeToBuckFile(java.util.List,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig	ConcurrentHashMap()	java.util.concurrent.ConcurrentHashMap	SOURCE
com.uber.okbuck.core.manager.LintManager	LintManager(org.gradle.api.Project,java.lang.String)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.LintManager	getDefaultLintVersion(org.gradle.api.Project)	findVersionInClasspath(org.gradle.api.Project,java.lang.String,java.lang.String)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	exists()	java.io.File	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	equals(java.lang.Object)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	String(byte[],java.nio.charset.Charset)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	readAllBytes(java.nio.file.Path)	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	deleteDirectory(java.io.File)	org.apache.commons.io.FileUtils	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	write(java.nio.file.Path,java.lang.Iterable,java.nio.file.OpenOption[])	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	singleton(T)	java.util.Collections	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	getDependencies()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	fetchLintDeps(java.lang.String)	getLintDepsCache()	com.uber.okbuck.core.manager.LintManager	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	getPlugin(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	getDependencyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	build(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	getByName(java.lang.String)	org.gradle.api.artifacts.ConfigurationContainer	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	getLintDepsCache()	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	replaceAll(java.lang.String,java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	getRelativePath(java.io.File,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	getProjectDir()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	computeIfAbsent(K,java.util.function.Function)	java.util.Map	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	copyFile(java.io.File,java.io.File)	org.apache.commons.io.FileUtils	SOURCE
com.uber.okbuck.core.manager.LintManager	lintConfig(java.io.File)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.LintManager	finalizeDependencies()	compose(java.util.Set,java.util.Collection)	com.uber.okbuck.composer.java.LintBinaryComposer	SOURCE
com.uber.okbuck.core.manager.LintManager	finalizeDependencies()	keySet()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.LintManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	finalizeDependencies()	getRootProject()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.LintManager	finalizeDependencies()	writeToBuckFile(java.util.List,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.KotlinManager	KotlinManager(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.KotlinManager	getDefaultKotlinVersion(org.gradle.api.Project)	findVersionInClasspath(org.gradle.api.Project,java.lang.String,java.lang.String)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	getDependencies()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	format(java.lang.String,java.lang.Object[])	java.lang.String	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	build(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.KotlinManager	setupKotlinHome(java.lang.String)	getDependencyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	IllegalStateException(java.lang.String)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	deleteQuietly(java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	finalizeDependencies()	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.KotlinManager	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	exists()	java.io.File	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	createLink(java.nio.file.Path,java.nio.file.Path)	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.KotlinManager	copyFile(java.nio.file.Path,java.nio.file.Path,java.lang.String,java.lang.String)	IllegalStateException(java.lang.Throwable)	java.lang.IllegalStateException	SOURCE
com.uber.okbuck.core.manager.ScalaManager	ScalaManager(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	getDependencies()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	build(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.ScalaManager	setupScalaHome(java.lang.String)	getDependencyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	render(java.nio.file.Path)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	deps(java.util.Collection)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	ScalaBuckFile()	com.uber.okbuck.template.config.ScalaBuckFile	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	external(java.util.Set)	com.uber.okbuck.composer.base.BuckRuleComposer	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.ScalaManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.GroovyManager	GroovyManager(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	getVersion()	groovy.lang.GroovySystem	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	getDependencies()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	build(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	getDependencyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	File(java.io.File,java.lang.String)	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	copyResourceToProject(java.lang.String,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	File(java.io.File,java.lang.String)	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	render(java.io.File)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	groovyVersion(java.lang.String)	com.uber.okbuck.template.config.Groovyc	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	Groovyc()	com.uber.okbuck.template.config.Groovyc	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	setExecutable(boolean)	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	File(java.io.File,java.lang.String)	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	render(java.io.File)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	groovyVersion(java.lang.String)	com.uber.okbuck.template.config.StartGroovy	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	StartGroovy()	com.uber.okbuck.template.config.StartGroovy	SOURCE
com.uber.okbuck.core.manager.GroovyManager	setupGroovyHome()	setExecutable(boolean)	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	getVersion()	groovy.lang.GroovySystem	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	deleteQuietly(java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	toString()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	getFileName()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	get(java.lang.String,java.lang.String[])	java.nio.file.Paths	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	getParentFile()	java.io.File	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	createLink(java.nio.file.Path,java.nio.file.Path)	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	toRealPath(java.nio.file.LinkOption[])	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.GroovyManager	finalDependencies()	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.TransformManager	configFileToPathMap	HashMap()	java.util.HashMap	SOURCE
com.uber.okbuck.core.manager.TransformManager	TransformManager(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	getDependencyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	build()	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	depCache(com.uber.okbuck.core.dependency.DependencyCache)	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	configuration(java.lang.String)	com.uber.okbuck.core.model.base.Scope$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	builder(org.gradle.api.Project)	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	addAll(java.lang.Iterable)	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	Builder()	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	targets(java.util.Set)	com.uber.okbuck.composer.base.BuckRuleComposer	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	getTargetDeps()	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	addAll(java.lang.Iterable)	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	external(java.util.Set)	com.uber.okbuck.composer.base.BuckRuleComposer	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	getExternalDeps()	com.uber.okbuck.core.model.base.Scope	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	add(E)	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	fetchTransformDeps()	build()	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	deleteQuietly(java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	copyFiles(java.nio.file.Path)	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.core.manager.TransformManager	finalizeDependencies()	composeBuckFile(java.nio.file.Path)	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	copyResourceToProject(java.lang.String,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	File(java.io.File,java.lang.String)	java.io.File	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	forEach(java.util.function.BiConsumer)	java.util.Map	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	accept(T,U)	java.util.function.BiConsumer	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.TransformManager	copyFiles(java.nio.file.Path)	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	Builder()	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	add(E)	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	deps(java.util.Collection)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	transformJar(java.lang.String)	com.uber.okbuck.template.config.TransformBuckFile	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	TransformBuckFile()	com.uber.okbuck.template.config.TransformBuckFile	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	addAll(java.lang.Iterable)	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	sorted()	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	values()	java.util.Map	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	name(java.lang.String)	com.uber.okbuck.template.core.Rule	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	ExportFile()	com.uber.okbuck.template.common.ExportFile	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	toList()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	writeToBuckFile(java.util.List,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.TransformManager	composeBuckFile(java.nio.file.Path)	build()	com.google.common.collect.ImmutableList$Builder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	getTransforms()	com.uber.okbuck.core.model.android.AndroidAppTarget	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	toList()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	of(L,R)	org.apache.commons.lang3.tuple.Pair	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	join(java.lang.CharSequence,java.lang.Iterable)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	getLeft()	org.apache.commons.lang3.tuple.Pair	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	toList()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	filter(java.util.function.Predicate)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	getRight()	org.apache.commons.lang3.tuple.Pair	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	test(T)	java.util.function.Predicate	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	nonNull(java.lang.Object)	java.util.Objects	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget)	toList()	java.util.stream.Collectors	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	get(java.lang.Object)	java.util.Map	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	StringBuilder(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	getTransformConfigRuleForFile(org.gradle.api.Project,java.io.File)	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	getProject()	com.uber.okbuck.core.model.base.Target	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	getRootProject()	com.uber.okbuck.core.model.base.Target	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	append(java.lang.String)	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	of(L,R)	org.apache.commons.lang3.tuple.Pair	SOURCE
com.uber.okbuck.core.manager.TransformManager	getBashCommandAndTransformDeps(com.uber.okbuck.core.model.android.AndroidAppTarget,java.util.Map)	toString()	java.lang.StringBuilder	SOURCE
com.uber.okbuck.core.manager.TransformManager	getTransformConfigRuleForFile(org.gradle.api.Project,java.io.File)	getTransformFilePathForFile(org.gradle.api.Project,java.io.File)	com.uber.okbuck.core.manager.TransformManager	SOURCE
com.uber.okbuck.core.manager.TransformManager	getTransformConfigRuleForFile(org.gradle.api.Project,java.io.File)	put(K,V)	java.util.Map	SOURCE
com.uber.okbuck.core.manager.TransformManager	getTransformConfigRuleForFile(org.gradle.api.Project,java.io.File)	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.TransformManager	getTransformFilePathForFile(org.gradle.api.Project,java.io.File)	replaceAll(java.lang.String,java.lang.String)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.TransformManager	getTransformFilePathForFile(org.gradle.api.Project,java.io.File)	getRelativePath(java.io.File,java.io.File)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.TransformManager	getTransformFilePathForFile(org.gradle.api.Project,java.io.File)	getRootDir()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	RobolectricManager(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	builder()	com.google.common.collect.ImmutableSet	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	allOf(java.lang.Class)	java.util.EnumSet	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	name()	java.lang.Enum	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	getDependencies()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	getName()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	getCoordinates()	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	add(E)	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	DependencyCache(org.gradle.api.Project,com.uber.okbuck.core.manager.DependencyManager)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	getDependencyManager(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	collect(java.util.stream.Collector)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	flatMap(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	map(java.util.function.Function)	java.util.stream.Stream	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	build()	com.google.common.collect.ImmutableSet$Builder	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	build(org.gradle.api.artifacts.Configuration)	com.uber.okbuck.core.dependency.DependencyCache	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	apply(T)	java.util.function.Function	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	stream()	java.util.Collection	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	download()	toImmutableSet()	com.uber.okbuck.core.util.MoreCollectors	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	deleteQuietly(java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	forEach(java.util.function.Consumer)	java.lang.Iterable	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	accept(T)	java.util.function.Consumer	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	resolve(java.lang.String)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	replace(java.lang.CharSequence,java.lang.CharSequence)	java.lang.String	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	toString()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	getFileName()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	createLink(java.nio.file.Path,java.nio.file.Path)	java.nio.file.Files	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	toRealPath(java.nio.file.LinkOption[])	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.RobolectricManager	finalizeDependencies()	RuntimeException(java.lang.Throwable)	java.lang.RuntimeException	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_16	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_17	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_18	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_19	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_21	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_22	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_23	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_24	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_25	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_26	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_27	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API_28	API(java.lang.String,java.lang.String)	com.uber.okbuck.core.manager.RobolectricManager$API	SOURCE
com.uber.okbuck.core.manager.RobolectricManager$API	API(java.lang.String,java.lang.String)	Enum(java.lang.String,int)	java.lang.Enum	SOURCE
com.uber.okbuck.core.manager.BuckManager	BuckManager(org.gradle.api.Project)	Object()	java.lang.Object	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	getOkBuckExtension(org.gradle.api.Project)	com.uber.okbuck.core.util.ProjectUtil	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	maybeCreate(java.lang.String)	org.gradle.api.NamedDomainObjectContainer	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	getConfigurations()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	maven(org.gradle.api.Action)	org.gradle.api.artifacts.dsl.RepositoryHandler	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	getRepositories()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	execute(T)	org.gradle.api.Action	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	setUrl(java.lang.Object)	org.gradle.api.artifacts.repositories.MavenArtifactRepository	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	add(java.lang.String,java.lang.Object)	org.gradle.api.artifacts.dsl.DependencyHandler	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	getDependencies()	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	getFiles()	org.gradle.api.artifacts.ResolvedConfiguration	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	getResolvedConfiguration()	org.gradle.api.artifacts.Configuration	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	checkArgument(boolean)	com.google.common.base.Preconditions	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	size()	java.util.Set	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	next()	java.util.Iterator	SOURCE
com.uber.okbuck.core.manager.BuckManager	setupBuckBinary()	iterator()	java.util.Set	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	resolve(java.nio.file.Path)	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	toPath()	java.io.File	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	file(java.lang.Object)	org.gradle.api.Project	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	getFileName()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	deleteQuietly(java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	getParent()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	mkdirs()	java.io.File	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	toFile()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	getParent()	java.nio.file.Path	SOURCE
com.uber.okbuck.core.manager.BuckManager	finalizeDependencies()	symlink(java.nio.file.Path,java.nio.file.Path)	com.uber.okbuck.core.util.FileUtil	SOURCE
